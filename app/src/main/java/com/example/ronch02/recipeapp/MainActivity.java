package com.example.ronch02.recipeapp;import androidx.appcompat.app.AppCompatActivity;import androidx.recyclerview.widget.DefaultItemAnimator;import androidx.recyclerview.widget.DividerItemDecoration;import androidx.recyclerview.widget.GridLayoutManager;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;import retrofit2.Call;import retrofit2.Callback;import retrofit2.Response;import android.app.Activity;import android.app.ProgressDialog;import android.content.Context;import android.content.ContextWrapper;import android.content.Intent;import android.content.res.Configuration;import android.os.Bundle;import android.util.Log;import android.widget.Toast;import com.example.ronch02.recipeapp.Model.DetailActivity;import com.example.ronch02.recipeapp.Model.Recipe;import com.example.ronch02.recipeapp.adapter.RecipeAdapter;import com.example.ronch02.recipeapp.api.Client;import com.example.ronch02.recipeapp.api.Service;import com.google.gson.JsonArray;import java.util.ArrayList;import java.util.List;public class MainActivity extends AppCompatActivity {    private RecyclerView recyclerView;    private RecipeAdapter adapter;    static List<Recipe> recipesList;    ProgressDialog progressDialog;    private SwipeRefreshLayout swipeContainer;    public static final String LOG_TAG = RecipeAdapter.class.getName();    public Activity getActivity() {        Context context = this;        while (context instanceof ContextWrapper) {            if (context instanceof Activity) {                return (Activity) context;            }            context = ((ContextWrapper) context).getBaseContext();        }        return null;    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        initViews();        swipeContainer = (SwipeRefreshLayout) findViewById(R.id.main_content);        swipeContainer.setColorSchemeResources(android.R.color.holo_blue_dark);        swipeContainer.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {            @Override            public void onRefresh() {                initViews();                loadJson();                //     Toast.makeText(MainActivity.this, "Recipe Refreshed", Toast.LENGTH_SHORT).show();            }        });        loadJson();    }    private void initViews() {        progressDialog = new ProgressDialog(this);        progressDialog.setMessage("Fetching...");        progressDialog.setCancelable(false);        recyclerView = findViewById(R.id.recycler_view);        recipesList = new ArrayList<>();        adapter = new RecipeAdapter(this, recipesList);        if (getActivity().getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT) {            recyclerView.setLayoutManager(new LinearLayoutManager(this));            recyclerView.addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.HORIZONTAL));            recyclerView.setItemAnimator(new DefaultItemAnimator());            recyclerView.setAdapter(adapter);        }    }    private void loadJson() {        Service service = Client.getClient().create(Service.class);        Call<List<Recipe>> call = service.readJson();        call.enqueue(new Callback<List<Recipe>>() {            @Override            public void onResponse(Call<List<Recipe>> call, Response<List<Recipe>> response) {                recipesList = response.body();                adapter.setRecipes(recipesList);                progressDialog.hide();            }            @Override            public void onFailure(Call<List<Recipe>> call, Throwable t) {                Log.e("failure", "failure");            }        });    }    public static Recipe getRecipe(int position) {        return recipesList.get(position);    }}